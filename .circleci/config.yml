version: 2.1

orbs:
  slack: circleci/slack@3.4.2

commands:
  laravel_setup:
    steps:
      - run:
          command: |
            cp .env.circleci .env
            docker-compose up -d --build
            docker-compose run app php artisan key:generate
#            docker-compose run app php artisan migrate:refresh --seed

  php:
    steps:
      - run:
          name: php -v
          command: php -v

  test_notification:
    steps:
      - slack/status:
          success_message: ':circleci-success: $CIRCLE_BRANCH のテストが完了しました\n\n:github-wh: User：$CIRCLE_USERNAME'
          failure_message: ':circleci-failed: $CIRCLE_BRANCH のテストが失敗しました\n\n:github-wh: User：$CIRCLE_USERNAME'
          webhook: '${SLACK_WEBHOOK}'

  deploy_notification:
    steps:
      - slack/status:
          success_message: ':circleci-success: $CIRCLE_BRANCH のデプロイが完了しました\n\n:github-wh: User：$CIRCLE_USERNAME'
          failure_message: ':circleci-failed: $CIRCLE_BRANCH のデプロイが失敗しました\n\n:github-wh: User：$CIRCLE_USERNAME'
          webhook: '${SLACK_WEBHOOK}'



jobs:
  test:
    machine: true
    steps:
      - checkout
      - laravel_setup
      - php
      # - test_notification

      # - run: sudo apt update
      # - run: sudo docker-php-ext-install zip
      # - restore_cache:
      #     keys:
      #       - v1-dependencies-{{ checksum "composer.json" }}
      #       - v1-dependencies-
      # - run: composer install -n --prefer-dist
      # - save_cache:
      #     key: v1-dependencies-{{ checksum "composer.json" }}
      #     paths:
      #       - ./vendor
      # - restore_cache:
      #     keys:
      #       - node-v1-{{ checksum "package.json" }}
      #       - node-v1-
      # - run: yarn install
      # - save_cache:
      #     key: node-v1-{{ checksum "package.json" }}
      #     paths:
      #       - node_modules

      # - run: touch storage/testing.sqlite
      # - run: php artisan migrate --env=testing --database=sqlite_testing --force
      # # run tests with phpunit or codecept
      # #- run: ./vendor/bin/phpunit
      # - run: ./vendor/bin/codecept build
      # - run: ./vendor/bin/codecept run


workflows:
  test:
    jobs:
      - test
#           filters:
#             branches:
#                 ignore: master

#   test_and_deploy:
#     jobs:
#       - test:
#           filters:
#             branches:
#                 only: master
#       - deploy_master:
#           requires:
#             - test
#           filters:
#             branches:
#                 only: master
