version: 2.1

orbs:
  slack: circleci/slack@3.4.2

commands:
  docker_setup:
    steps:
      - run:
          name: docker setup
          command: |
            cp .env.circleci .env
            docker-compose up -d --build

  laravel_setup:
    steps:
      - run:
          name: laravel setup
          command: |
            touch .env
            docker-compose run php composer install

  php:
    steps:
      - run:
          name: laravel -v
          command: docker-compose run php php artisan -v

  test_notification:
    steps:
      - slack/status:
          success_message: ':circleci-success: $CIRCLE_BRANCH のテストが完了しました\n\n:github-wh: User：$CIRCLE_USERNAME'
          failure_message: ':circleci-failed: $CIRCLE_BRANCH のテストが失敗しました\n\n:github-wh: User：$CIRCLE_USERNAME'
          webhook: '${SLACK_WEBHOOK}'

  deploy_notification:
    steps:
      - slack/status:
          success_message: ':circleci-success: $CIRCLE_BRANCH のデプロイが完了しました\n\n:github-wh: User：$CIRCLE_USERNAME'
          failure_message: ':circleci-failed: $CIRCLE_BRANCH のデプロイが失敗しました\n\n:github-wh: User：$CIRCLE_USERNAME'
          webhook: '${SLACK_WEBHOOK}'

  slack_notification:
    steps:
      - run: echo "deploy my app"
      - slack/notify:
          event: fail
          mentions: '@EngineeringTeam'
          template: basic_fail_1
      - slack/notify:
          event: pass
          template: success_tagged_deploy_1



jobs:
  test:
    machine: true
    steps:
      - checkout
      - docker_setup
      - laravel_setup
      - php
      - slack_notification
      # - test_notification


workflows:
  test:
    jobs:
      - test
#           filters:
#             branches:
#                 ignore: master

#   test_and_deploy:
#     jobs:
#       - test:
#           filters:
#             branches:
#                 only: master
#       - deploy_master:
#           requires:
#             - test
#           filters:
#             branches:
#                 only: master
